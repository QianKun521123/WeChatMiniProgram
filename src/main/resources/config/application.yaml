server:
  servlet:
    # 项目访问路径
    context-path: /WeChatMiniProgram

spring:
  profiles:
    # 指定配置环境
    active: dev
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    dynamic:
      hikari:
        # 设置是否自动提交事务，默认为true
        auto-commit: true
        # 设置用于测试连接的SQL查询语句
        connection-test-query: SELECT 1
        # 设置获取数据库连接的超时时间，默认为30秒，单位是毫秒
        connection-timeout: 30000
        # 设置连接在连接池中保持空闲的最长时间，默认为10分钟，单位是毫秒
        idle-timeout: 30000
        # 设置连接在连接池中允许存在的最长时间，默认为30分钟，单位是毫秒
        max-lifetime: 1800000
        # 设置连接池中允许的最大连接数，默认为10
        maximum-pool-size: 15
        # 设置连接池中保持的最小空闲连接数，默认为10
        minimum-idle: 5
        # 设置连接池的名称，默认为"HikariPool-1"
        pool-name: HikariCP
        # 设置连接验证的超时时间，默认为5秒，单位是秒
        validation-timeout: 10

# WeChatMiniProgram项目配置
wmp:
  # 名称
  name: WeChatMiniProgram
  # 版本
  version: 1.0
  # 项目创建时间
  createTime: 2024-7-22
  technicalVersion:
    - springboot 3.3.2
    - knife4j-openapi3-jakarta 4.5.0
    - lombok 1.18.34
    - MapStruct 1.5.3.Final
    - dynamic-datasource 4.3.1
    - lombok 1.18.34
    - mybatis-plus 3.5.7
    - mysql-connector 8.0.33
    - druid 1.2.23 性能不如HikariCP 所以弃用


springdoc:
  swagger-ui:
    # path: 配置swagger-ui.html/UI界面的访问路径,默认为/swagger-ui.html
    path: /swagger-ui.html
    # tags-sorter: 接口文档中的tags排序规则,默认为alpha,可选值为alpha(按字母顺序排序)或as-is(按照在代码中定义的顺序排序)
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    # path: 配置api-docs的访问路径,默认为/v3/api-docs
    path: /v3/api-docs
    enabled: true
knife4j:
  # 设置为true以启用Knife4j增强功能,这将再应用程序中启用Knife4j UI
  enable: true
  setting:
    # language: 设置Knife4j UI的语言,默认为zh_cn,可选值为zh_cn或en
    language: zh_cn
  basic:
    enable: true
    username: admin
    password: admin



mybatis-plus:
  # 加载映射文件
  mapper-locations: classpath:mapper/**/*.xml
  # 设置别名
  type-aliases-package: com.gwf.entity
  configuration:
    # 开启驼峰命名
    map-underscore-to-camel-case: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: flag # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)


